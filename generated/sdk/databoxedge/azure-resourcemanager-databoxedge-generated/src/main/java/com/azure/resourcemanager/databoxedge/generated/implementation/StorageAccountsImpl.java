// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.databoxedge.generated.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.resourcemanager.databoxedge.generated.DataBoxEdgeManager;
import com.azure.resourcemanager.databoxedge.generated.fluent.StorageAccountsClient;
import com.azure.resourcemanager.databoxedge.generated.fluent.models.StorageAccountInner;
import com.azure.resourcemanager.databoxedge.generated.models.StorageAccount;
import com.azure.resourcemanager.databoxedge.generated.models.StorageAccounts;

public final class StorageAccountsImpl implements StorageAccounts {
    private final StorageAccountsClient innerClient;

    private final DataBoxEdgeManager serviceManager;

    public StorageAccountsImpl(StorageAccountsClient innerClient, DataBoxEdgeManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<StorageAccount> listByDataBoxEdgeDevice(String deviceName, String resourceGroupName) {
        PagedIterable<StorageAccountInner> inner =
            this.serviceClient().listByDataBoxEdgeDevice(deviceName, resourceGroupName);
        return inner.mapPage(inner1 -> new StorageAccountImpl(inner1, this.manager()));
    }

    public PagedIterable<StorageAccount> listByDataBoxEdgeDevice(
        String deviceName, String resourceGroupName, Context context) {
        PagedIterable<StorageAccountInner> inner =
            this.serviceClient().listByDataBoxEdgeDevice(deviceName, resourceGroupName, context);
        return inner.mapPage(inner1 -> new StorageAccountImpl(inner1, this.manager()));
    }

    public StorageAccount get(String deviceName, String storageAccountName, String resourceGroupName) {
        StorageAccountInner inner = this.serviceClient().get(deviceName, storageAccountName, resourceGroupName);
        if (inner != null) {
            return new StorageAccountImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<StorageAccount> getWithResponse(
        String deviceName, String storageAccountName, String resourceGroupName, Context context) {
        Response<StorageAccountInner> inner =
            this.serviceClient().getWithResponse(deviceName, storageAccountName, resourceGroupName, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new StorageAccountImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public void delete(String deviceName, String storageAccountName, String resourceGroupName) {
        this.serviceClient().delete(deviceName, storageAccountName, resourceGroupName);
    }

    public void delete(String deviceName, String storageAccountName, String resourceGroupName, Context context) {
        this.serviceClient().delete(deviceName, storageAccountName, resourceGroupName, context);
    }

    private StorageAccountsClient serviceClient() {
        return this.innerClient;
    }

    private DataBoxEdgeManager manager() {
        return this.serviceManager;
    }

    public StorageAccountImpl define(String name) {
        return new StorageAccountImpl(name, this.manager());
    }
}
