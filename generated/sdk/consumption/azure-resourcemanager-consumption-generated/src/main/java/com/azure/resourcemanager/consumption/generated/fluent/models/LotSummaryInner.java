// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.consumption.generated.fluent.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.annotation.JsonFlatten;
import com.azure.core.management.ProxyResource;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.consumption.generated.models.Amount;
import com.azure.resourcemanager.consumption.generated.models.LotSource;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;
import java.util.Map;

/** A lot summary resource. */
@JsonFlatten
@Immutable
public class LotSummaryInner extends ProxyResource {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(LotSummaryInner.class);

    /*
     * The original amount of a lot.
     */
    @JsonProperty(value = "properties.originalAmount", access = JsonProperty.Access.WRITE_ONLY)
    private Amount originalAmount;

    /*
     * The balance as of the last invoice.
     */
    @JsonProperty(value = "properties.closedBalance", access = JsonProperty.Access.WRITE_ONLY)
    private Amount closedBalance;

    /*
     * The source of the lot.
     */
    @JsonProperty(value = "properties.source", access = JsonProperty.Access.WRITE_ONLY)
    private LotSource source;

    /*
     * The date when the lot became effective.
     */
    @JsonProperty(value = "properties.startDate", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime startDate;

    /*
     * The expiration date of a lot.
     */
    @JsonProperty(value = "properties.expirationDate", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime expirationDate;

    /*
     * The po number of the invoice on which the lot was added. This property
     * is not available for ConsumptionCommitment lots.
     */
    @JsonProperty(value = "properties.poNumber", access = JsonProperty.Access.WRITE_ONLY)
    private String poNumber;

    /*
     * The date when the lot was added.
     */
    @JsonProperty(value = "properties.purchaseDate", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime purchaseDate;

    /*
     * The status of the lot.
     */
    @JsonProperty(value = "properties.status", access = JsonProperty.Access.WRITE_ONLY)
    private String status;

    /*
     * The etag for the resource.
     */
    @JsonProperty(value = "etag", access = JsonProperty.Access.WRITE_ONLY)
    private String etag;

    /*
     * Resource tags.
     */
    @JsonProperty(value = "tags", access = JsonProperty.Access.WRITE_ONLY)
    private Map<String, String> tags;

    /**
     * Get the originalAmount property: The original amount of a lot.
     *
     * @return the originalAmount value.
     */
    public Amount originalAmount() {
        return this.originalAmount;
    }

    /**
     * Get the closedBalance property: The balance as of the last invoice.
     *
     * @return the closedBalance value.
     */
    public Amount closedBalance() {
        return this.closedBalance;
    }

    /**
     * Get the source property: The source of the lot.
     *
     * @return the source value.
     */
    public LotSource source() {
        return this.source;
    }

    /**
     * Get the startDate property: The date when the lot became effective.
     *
     * @return the startDate value.
     */
    public OffsetDateTime startDate() {
        return this.startDate;
    }

    /**
     * Get the expirationDate property: The expiration date of a lot.
     *
     * @return the expirationDate value.
     */
    public OffsetDateTime expirationDate() {
        return this.expirationDate;
    }

    /**
     * Get the poNumber property: The po number of the invoice on which the lot was added. This property is not
     * available for ConsumptionCommitment lots.
     *
     * @return the poNumber value.
     */
    public String poNumber() {
        return this.poNumber;
    }

    /**
     * Get the purchaseDate property: The date when the lot was added.
     *
     * @return the purchaseDate value.
     */
    public OffsetDateTime purchaseDate() {
        return this.purchaseDate;
    }

    /**
     * Get the status property: The status of the lot.
     *
     * @return the status value.
     */
    public String status() {
        return this.status;
    }

    /**
     * Get the etag property: The etag for the resource.
     *
     * @return the etag value.
     */
    public String etag() {
        return this.etag;
    }

    /**
     * Get the tags property: Resource tags.
     *
     * @return the tags value.
     */
    public Map<String, String> tags() {
        return this.tags;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (originalAmount() != null) {
            originalAmount().validate();
        }
        if (closedBalance() != null) {
            closedBalance().validate();
        }
    }
}
