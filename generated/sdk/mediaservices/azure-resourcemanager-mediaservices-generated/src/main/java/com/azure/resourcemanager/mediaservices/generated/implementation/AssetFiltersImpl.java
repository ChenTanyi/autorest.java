// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.mediaservices.generated.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.resourcemanager.mediaservices.generated.MediaservicesManager;
import com.azure.resourcemanager.mediaservices.generated.fluent.AssetFiltersClient;
import com.azure.resourcemanager.mediaservices.generated.fluent.models.AssetFilterInner;
import com.azure.resourcemanager.mediaservices.generated.models.AssetFilter;
import com.azure.resourcemanager.mediaservices.generated.models.AssetFilters;

public final class AssetFiltersImpl implements AssetFilters {
    private final AssetFiltersClient innerClient;

    private final MediaservicesManager serviceManager;

    public AssetFiltersImpl(AssetFiltersClient innerClient, MediaservicesManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<AssetFilter> list(String resourceGroupName, String accountName, String assetName) {
        PagedIterable<AssetFilterInner> inner = this.serviceClient().list(resourceGroupName, accountName, assetName);
        return inner.mapPage(inner1 -> new AssetFilterImpl(inner1, this.manager()));
    }

    public PagedIterable<AssetFilter> list(
        String resourceGroupName, String accountName, String assetName, Context context) {
        PagedIterable<AssetFilterInner> inner =
            this.serviceClient().list(resourceGroupName, accountName, assetName, context);
        return inner.mapPage(inner1 -> new AssetFilterImpl(inner1, this.manager()));
    }

    public AssetFilter get(String resourceGroupName, String accountName, String assetName, String filterName) {
        AssetFilterInner inner = this.serviceClient().get(resourceGroupName, accountName, assetName, filterName);
        if (inner != null) {
            return new AssetFilterImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<AssetFilter> getWithResponse(
        String resourceGroupName, String accountName, String assetName, String filterName, Context context) {
        Response<AssetFilterInner> inner =
            this.serviceClient().getWithResponse(resourceGroupName, accountName, assetName, filterName, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new AssetFilterImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public void delete(String resourceGroupName, String accountName, String assetName, String filterName) {
        this.serviceClient().delete(resourceGroupName, accountName, assetName, filterName);
    }

    public Response<Void> deleteWithResponse(
        String resourceGroupName, String accountName, String assetName, String filterName, Context context) {
        return this.serviceClient().deleteWithResponse(resourceGroupName, accountName, assetName, filterName, context);
    }

    private AssetFiltersClient serviceClient() {
        return this.innerClient;
    }

    private MediaservicesManager manager() {
        return this.serviceManager;
    }

    public AssetFilterImpl define(String name) {
        return new AssetFilterImpl(name, this.manager());
    }
}
