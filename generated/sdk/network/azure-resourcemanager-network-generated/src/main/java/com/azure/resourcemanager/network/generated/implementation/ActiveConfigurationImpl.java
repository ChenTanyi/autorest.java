// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.implementation;

import com.azure.resourcemanager.network.generated.fluent.models.ActiveConfigurationInner;
import com.azure.resourcemanager.network.generated.fluent.models.AdminRuleInner;
import com.azure.resourcemanager.network.generated.fluent.models.ConnectivityConfigurationInner;
import com.azure.resourcemanager.network.generated.fluent.models.NetworkGroupInner;
import com.azure.resourcemanager.network.generated.fluent.models.UserRuleInner;
import com.azure.resourcemanager.network.generated.models.ActiveConfiguration;
import com.azure.resourcemanager.network.generated.models.AdminRule;
import com.azure.resourcemanager.network.generated.models.ConfigType;
import com.azure.resourcemanager.network.generated.models.ConnectivityConfiguration;
import com.azure.resourcemanager.network.generated.models.NetworkGroup;
import com.azure.resourcemanager.network.generated.models.UserRule;
import java.time.OffsetDateTime;
import java.util.Collections;
import java.util.List;
import java.util.stream.Collectors;

public final class ActiveConfigurationImpl implements ActiveConfiguration {
    private ActiveConfigurationInner innerObject;

    private final com.azure.resourcemanager.network.generated.NetworkManager serviceManager;

    ActiveConfigurationImpl(
        ActiveConfigurationInner innerObject,
        com.azure.resourcemanager.network.generated.NetworkManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public ConfigType configType() {
        return this.innerModel().configType();
    }

    public ConnectivityConfiguration connectivityConfiguration() {
        ConnectivityConfigurationInner inner = this.innerModel().connectivityConfiguration();
        if (inner != null) {
            return new ConnectivityConfigurationImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public AdminRule securityAdminRule() {
        AdminRuleInner inner = this.innerModel().securityAdminRule();
        if (inner != null) {
            return new AdminRuleImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public UserRule securityUserRule() {
        UserRuleInner inner = this.innerModel().securityUserRule();
        if (inner != null) {
            return new UserRuleImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public List<NetworkGroup> configurationGroups() {
        List<NetworkGroupInner> inner = this.innerModel().configurationGroups();
        if (inner != null) {
            return Collections
                .unmodifiableList(
                    inner
                        .stream()
                        .map(inner1 -> new NetworkGroupImpl(inner1, this.manager()))
                        .collect(Collectors.toList()));
        } else {
            return Collections.emptyList();
        }
    }

    public OffsetDateTime commitTime() {
        return this.innerModel().commitTime();
    }

    public String region() {
        return this.innerModel().region();
    }

    public ActiveConfigurationInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.network.generated.NetworkManager manager() {
        return this.serviceManager;
    }
}
