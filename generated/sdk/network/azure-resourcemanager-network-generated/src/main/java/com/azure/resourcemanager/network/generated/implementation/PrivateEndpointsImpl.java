// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.resourcemanager.network.generated.NetworkManager;
import com.azure.resourcemanager.network.generated.fluent.PrivateEndpointsClient;
import com.azure.resourcemanager.network.generated.fluent.models.PrivateEndpointInner;
import com.azure.resourcemanager.network.generated.models.PrivateEndpoint;
import com.azure.resourcemanager.network.generated.models.PrivateEndpoints;

public final class PrivateEndpointsImpl implements PrivateEndpoints {
    private final PrivateEndpointsClient innerClient;

    private final NetworkManager serviceManager;

    public PrivateEndpointsImpl(PrivateEndpointsClient innerClient, NetworkManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public void delete(String resourceGroupName, String privateEndpointName) {
        this.serviceClient().delete(resourceGroupName, privateEndpointName);
    }

    public void delete(String resourceGroupName, String privateEndpointName, Context context) {
        this.serviceClient().delete(resourceGroupName, privateEndpointName, context);
    }

    public PrivateEndpoint getByResourceGroup(String resourceGroupName, String privateEndpointName) {
        PrivateEndpointInner inner = this.serviceClient().getByResourceGroup(resourceGroupName, privateEndpointName);
        if (inner != null) {
            return new PrivateEndpointImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<PrivateEndpoint> getByResourceGroupWithResponse(
        String resourceGroupName, String privateEndpointName, String expand, Context context) {
        Response<PrivateEndpointInner> inner =
            this
                .serviceClient()
                .getByResourceGroupWithResponse(resourceGroupName, privateEndpointName, expand, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new PrivateEndpointImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public PagedIterable<PrivateEndpoint> listByResourceGroup(String resourceGroupName) {
        PagedIterable<PrivateEndpointInner> inner = this.serviceClient().listByResourceGroup(resourceGroupName);
        return inner.mapPage(inner1 -> new PrivateEndpointImpl(inner1, this.manager()));
    }

    public PagedIterable<PrivateEndpoint> listByResourceGroup(String resourceGroupName, Context context) {
        PagedIterable<PrivateEndpointInner> inner =
            this.serviceClient().listByResourceGroup(resourceGroupName, context);
        return inner.mapPage(inner1 -> new PrivateEndpointImpl(inner1, this.manager()));
    }

    public PagedIterable<PrivateEndpoint> list() {
        PagedIterable<PrivateEndpointInner> inner = this.serviceClient().list();
        return inner.mapPage(inner1 -> new PrivateEndpointImpl(inner1, this.manager()));
    }

    public PagedIterable<PrivateEndpoint> list(Context context) {
        PagedIterable<PrivateEndpointInner> inner = this.serviceClient().list(context);
        return inner.mapPage(inner1 -> new PrivateEndpointImpl(inner1, this.manager()));
    }

    private PrivateEndpointsClient serviceClient() {
        return this.innerClient;
    }

    private NetworkManager manager() {
        return this.serviceManager;
    }

    public PrivateEndpointImpl define(String name) {
        return new PrivateEndpointImpl(name, this.manager());
    }
}
