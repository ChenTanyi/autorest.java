// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.network.generated.fluent.EffectiveVirtualNetworksClient;
import com.azure.resourcemanager.network.generated.fluent.models.EffectiveVirtualNetworkInner;
import com.azure.resourcemanager.network.generated.models.EffectiveVirtualNetwork;
import com.azure.resourcemanager.network.generated.models.EffectiveVirtualNetworks;
import com.azure.resourcemanager.network.generated.models.EffectiveVirtualNetworksParameter;
import com.fasterxml.jackson.annotation.JsonIgnore;

public final class EffectiveVirtualNetworksImpl implements EffectiveVirtualNetworks {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(EffectiveVirtualNetworksImpl.class);

    private final EffectiveVirtualNetworksClient innerClient;

    private final com.azure.resourcemanager.network.generated.NetworkManager serviceManager;

    public EffectiveVirtualNetworksImpl(
        EffectiveVirtualNetworksClient innerClient,
        com.azure.resourcemanager.network.generated.NetworkManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<EffectiveVirtualNetwork> listByNetworkManager(
        String resourceGroupName, String networkManagerName) {
        PagedIterable<EffectiveVirtualNetworkInner> inner =
            this.serviceClient().listByNetworkManager(resourceGroupName, networkManagerName);
        return Utils.mapPage(inner, inner1 -> new EffectiveVirtualNetworkImpl(inner1, this.manager()));
    }

    public PagedIterable<EffectiveVirtualNetwork> listByNetworkManager(
        String resourceGroupName,
        String networkManagerName,
        Integer top,
        String skipToken,
        EffectiveVirtualNetworksParameter parameters,
        Context context) {
        PagedIterable<EffectiveVirtualNetworkInner> inner =
            this
                .serviceClient()
                .listByNetworkManager(resourceGroupName, networkManagerName, top, skipToken, parameters, context);
        return Utils.mapPage(inner, inner1 -> new EffectiveVirtualNetworkImpl(inner1, this.manager()));
    }

    public PagedIterable<EffectiveVirtualNetwork> listByNetworkGroup(
        String resourceGroupName, String networkManagerName, String networkGroupName) {
        PagedIterable<EffectiveVirtualNetworkInner> inner =
            this.serviceClient().listByNetworkGroup(resourceGroupName, networkManagerName, networkGroupName);
        return Utils.mapPage(inner, inner1 -> new EffectiveVirtualNetworkImpl(inner1, this.manager()));
    }

    public PagedIterable<EffectiveVirtualNetwork> listByNetworkGroup(
        String resourceGroupName,
        String networkManagerName,
        String networkGroupName,
        Integer top,
        String skipToken,
        Context context) {
        PagedIterable<EffectiveVirtualNetworkInner> inner =
            this
                .serviceClient()
                .listByNetworkGroup(resourceGroupName, networkManagerName, networkGroupName, top, skipToken, context);
        return Utils.mapPage(inner, inner1 -> new EffectiveVirtualNetworkImpl(inner1, this.manager()));
    }

    private EffectiveVirtualNetworksClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.network.generated.NetworkManager manager() {
        return this.serviceManager;
    }
}
