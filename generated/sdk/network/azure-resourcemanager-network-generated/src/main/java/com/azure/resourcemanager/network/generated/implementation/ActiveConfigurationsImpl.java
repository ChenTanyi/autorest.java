// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.network.generated.fluent.ActiveConfigurationsClient;
import com.azure.resourcemanager.network.generated.fluent.models.ActiveConfigurationInner;
import com.azure.resourcemanager.network.generated.models.ActiveConfiguration;
import com.azure.resourcemanager.network.generated.models.ActiveConfigurations;
import com.fasterxml.jackson.annotation.JsonIgnore;

public final class ActiveConfigurationsImpl implements ActiveConfigurations {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ActiveConfigurationsImpl.class);

    private final ActiveConfigurationsClient innerClient;

    private final com.azure.resourcemanager.network.generated.NetworkManager serviceManager;

    public ActiveConfigurationsImpl(
        ActiveConfigurationsClient innerClient,
        com.azure.resourcemanager.network.generated.NetworkManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<ActiveConfiguration> list(String resourceGroupName, String networkManagerName) {
        PagedIterable<ActiveConfigurationInner> inner =
            this.serviceClient().list(resourceGroupName, networkManagerName);
        return Utils.mapPage(inner, inner1 -> new ActiveConfigurationImpl(inner1, this.manager()));
    }

    public PagedIterable<ActiveConfiguration> list(
        String resourceGroupName,
        String networkManagerName,
        Integer top,
        String skipToken,
        String region,
        Context context) {
        PagedIterable<ActiveConfigurationInner> inner =
            this.serviceClient().list(resourceGroupName, networkManagerName, top, skipToken, region, context);
        return Utils.mapPage(inner, inner1 -> new ActiveConfigurationImpl(inner1, this.manager()));
    }

    private ActiveConfigurationsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.network.generated.NetworkManager manager() {
        return this.serviceManager;
    }
}
