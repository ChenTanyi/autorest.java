// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.network.generated.models.ConfigType;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;
import java.util.List;

/** Active Configuration. */
@Fluent
public final class ActiveConfigurationInner extends EffectiveConfigurationInner {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ActiveConfigurationInner.class);

    /*
     * Deployment time string.
     */
    @JsonProperty(value = "commitTime")
    private OffsetDateTime commitTime;

    /*
     * Deployment region.
     */
    @JsonProperty(value = "region")
    private String region;

    /**
     * Get the commitTime property: Deployment time string.
     *
     * @return the commitTime value.
     */
    public OffsetDateTime commitTime() {
        return this.commitTime;
    }

    /**
     * Set the commitTime property: Deployment time string.
     *
     * @param commitTime the commitTime value to set.
     * @return the ActiveConfigurationInner object itself.
     */
    public ActiveConfigurationInner withCommitTime(OffsetDateTime commitTime) {
        this.commitTime = commitTime;
        return this;
    }

    /**
     * Get the region property: Deployment region.
     *
     * @return the region value.
     */
    public String region() {
        return this.region;
    }

    /**
     * Set the region property: Deployment region.
     *
     * @param region the region value to set.
     * @return the ActiveConfigurationInner object itself.
     */
    public ActiveConfigurationInner withRegion(String region) {
        this.region = region;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public ActiveConfigurationInner withConfigType(ConfigType configType) {
        super.withConfigType(configType);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public ActiveConfigurationInner withConnectivityConfiguration(
        ConnectivityConfigurationInner connectivityConfiguration) {
        super.withConnectivityConfiguration(connectivityConfiguration);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public ActiveConfigurationInner withSecurityAdminRule(AdminRuleInner securityAdminRule) {
        super.withSecurityAdminRule(securityAdminRule);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public ActiveConfigurationInner withSecurityUserRule(UserRuleInner securityUserRule) {
        super.withSecurityUserRule(securityUserRule);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public ActiveConfigurationInner withConfigurationGroups(List<NetworkGroupInner> configurationGroups) {
        super.withConfigurationGroups(configurationGroups);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}
