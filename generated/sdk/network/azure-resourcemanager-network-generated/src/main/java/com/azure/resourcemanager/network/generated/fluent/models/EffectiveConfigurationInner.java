// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.network.generated.models.ConfigType;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** The network manager effective configuration. */
@Fluent
public class EffectiveConfigurationInner {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(EffectiveConfigurationInner.class);

    /*
     * Effective configuration.
     */
    @JsonProperty(value = "configType")
    private ConfigType configType;

    /*
     * Connectivity configuration object.
     */
    @JsonProperty(value = "connectivityConfiguration")
    private ConnectivityConfigurationInner connectivityConfiguration;

    /*
     * Security admin rule object.
     */
    @JsonProperty(value = "securityAdminRule")
    private AdminRuleInner securityAdminRule;

    /*
     * Security user rule object.
     */
    @JsonProperty(value = "securityUserRule")
    private UserRuleInner securityUserRule;

    /*
     * Effective configuration groups.
     */
    @JsonProperty(value = "configurationGroups")
    private List<NetworkGroupInner> configurationGroups;

    /**
     * Get the configType property: Effective configuration.
     *
     * @return the configType value.
     */
    public ConfigType configType() {
        return this.configType;
    }

    /**
     * Set the configType property: Effective configuration.
     *
     * @param configType the configType value to set.
     * @return the EffectiveConfigurationInner object itself.
     */
    public EffectiveConfigurationInner withConfigType(ConfigType configType) {
        this.configType = configType;
        return this;
    }

    /**
     * Get the connectivityConfiguration property: Connectivity configuration object.
     *
     * @return the connectivityConfiguration value.
     */
    public ConnectivityConfigurationInner connectivityConfiguration() {
        return this.connectivityConfiguration;
    }

    /**
     * Set the connectivityConfiguration property: Connectivity configuration object.
     *
     * @param connectivityConfiguration the connectivityConfiguration value to set.
     * @return the EffectiveConfigurationInner object itself.
     */
    public EffectiveConfigurationInner withConnectivityConfiguration(
        ConnectivityConfigurationInner connectivityConfiguration) {
        this.connectivityConfiguration = connectivityConfiguration;
        return this;
    }

    /**
     * Get the securityAdminRule property: Security admin rule object.
     *
     * @return the securityAdminRule value.
     */
    public AdminRuleInner securityAdminRule() {
        return this.securityAdminRule;
    }

    /**
     * Set the securityAdminRule property: Security admin rule object.
     *
     * @param securityAdminRule the securityAdminRule value to set.
     * @return the EffectiveConfigurationInner object itself.
     */
    public EffectiveConfigurationInner withSecurityAdminRule(AdminRuleInner securityAdminRule) {
        this.securityAdminRule = securityAdminRule;
        return this;
    }

    /**
     * Get the securityUserRule property: Security user rule object.
     *
     * @return the securityUserRule value.
     */
    public UserRuleInner securityUserRule() {
        return this.securityUserRule;
    }

    /**
     * Set the securityUserRule property: Security user rule object.
     *
     * @param securityUserRule the securityUserRule value to set.
     * @return the EffectiveConfigurationInner object itself.
     */
    public EffectiveConfigurationInner withSecurityUserRule(UserRuleInner securityUserRule) {
        this.securityUserRule = securityUserRule;
        return this;
    }

    /**
     * Get the configurationGroups property: Effective configuration groups.
     *
     * @return the configurationGroups value.
     */
    public List<NetworkGroupInner> configurationGroups() {
        return this.configurationGroups;
    }

    /**
     * Set the configurationGroups property: Effective configuration groups.
     *
     * @param configurationGroups the configurationGroups value to set.
     * @return the EffectiveConfigurationInner object itself.
     */
    public EffectiveConfigurationInner withConfigurationGroups(List<NetworkGroupInner> configurationGroups) {
        this.configurationGroups = configurationGroups;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (connectivityConfiguration() != null) {
            connectivityConfiguration().validate();
        }
        if (securityAdminRule() != null) {
            securityAdminRule().validate();
        }
        if (securityUserRule() != null) {
            securityUserRule().validate();
        }
        if (configurationGroups() != null) {
            configurationGroups().forEach(e -> e.validate());
        }
    }
}
