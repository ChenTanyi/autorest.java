// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.JsonFlatten;
import com.azure.core.management.ProxyResource;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.network.generated.models.AddressPrefixItem;
import com.azure.resourcemanager.network.generated.models.NetworkManagerSecurityGroupItem;
import com.azure.resourcemanager.network.generated.models.ProvisioningState;
import com.azure.resourcemanager.network.generated.models.SecurityConfigurationRuleAccess;
import com.azure.resourcemanager.network.generated.models.SecurityConfigurationRuleDirection;
import com.azure.resourcemanager.network.generated.models.SecurityConfigurationRuleProtocol;
import com.azure.resourcemanager.network.generated.models.SystemData;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Network admin rule. */
@JsonFlatten
@Fluent
public class AdminRuleInner extends ProxyResource {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(AdminRuleInner.class);

    /*
     * The system metadata related to this resource.
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /*
     * A friendly name for the rule.
     */
    @JsonProperty(value = "properties.displayName")
    private String displayName;

    /*
     * A description for this rule.
     */
    @JsonProperty(value = "properties.description")
    private String description;

    /*
     * Network protocol this rule applies to.
     */
    @JsonProperty(value = "properties.protocol")
    private SecurityConfigurationRuleProtocol protocol;

    /*
     * The CIDR or source IP ranges.
     */
    @JsonProperty(value = "properties.source")
    private List<AddressPrefixItem> source;

    /*
     * The destination address prefixes. CIDR or destination IP ranges.
     */
    @JsonProperty(value = "properties.destination")
    private List<AddressPrefixItem> destination;

    /*
     * The source port ranges.
     */
    @JsonProperty(value = "properties.sourcePortRanges")
    private List<String> sourcePortRanges;

    /*
     * The destination port ranges.
     */
    @JsonProperty(value = "properties.destinationPortRanges")
    private List<String> destinationPortRanges;

    /*
     * Indicates the access allowed for this particular rule
     */
    @JsonProperty(value = "properties.access")
    private SecurityConfigurationRuleAccess access;

    /*
     * The priority of the rule. The value can be between 1 and 4096. The
     * priority number must be unique for each rule in the collection. The
     * lower the priority number, the higher the priority of the rule.
     */
    @JsonProperty(value = "properties.priority")
    private Integer priority;

    /*
     * Indicates if the traffic matched against the rule in inbound or
     * outbound.
     */
    @JsonProperty(value = "properties.direction")
    private SecurityConfigurationRuleDirection direction;

    /*
     * The provisioning state of the security Configuration resource.
     */
    @JsonProperty(value = "properties.provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private ProvisioningState provisioningState;

    /*
     * Groups for configuration
     */
    @JsonProperty(value = "properties.appliesToGroups")
    private List<NetworkManagerSecurityGroupItem> appliesToGroups;

    /*
     * A unique read-only string that changes whenever the resource is updated.
     */
    @JsonProperty(value = "etag", access = JsonProperty.Access.WRITE_ONLY)
    private String etag;

    /**
     * Get the systemData property: The system metadata related to this resource.
     *
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Get the displayName property: A friendly name for the rule.
     *
     * @return the displayName value.
     */
    public String displayName() {
        return this.displayName;
    }

    /**
     * Set the displayName property: A friendly name for the rule.
     *
     * @param displayName the displayName value to set.
     * @return the AdminRuleInner object itself.
     */
    public AdminRuleInner withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }

    /**
     * Get the description property: A description for this rule.
     *
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description property: A description for this rule.
     *
     * @param description the description value to set.
     * @return the AdminRuleInner object itself.
     */
    public AdminRuleInner withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the protocol property: Network protocol this rule applies to.
     *
     * @return the protocol value.
     */
    public SecurityConfigurationRuleProtocol protocol() {
        return this.protocol;
    }

    /**
     * Set the protocol property: Network protocol this rule applies to.
     *
     * @param protocol the protocol value to set.
     * @return the AdminRuleInner object itself.
     */
    public AdminRuleInner withProtocol(SecurityConfigurationRuleProtocol protocol) {
        this.protocol = protocol;
        return this;
    }

    /**
     * Get the source property: The CIDR or source IP ranges.
     *
     * @return the source value.
     */
    public List<AddressPrefixItem> source() {
        return this.source;
    }

    /**
     * Set the source property: The CIDR or source IP ranges.
     *
     * @param source the source value to set.
     * @return the AdminRuleInner object itself.
     */
    public AdminRuleInner withSource(List<AddressPrefixItem> source) {
        this.source = source;
        return this;
    }

    /**
     * Get the destination property: The destination address prefixes. CIDR or destination IP ranges.
     *
     * @return the destination value.
     */
    public List<AddressPrefixItem> destination() {
        return this.destination;
    }

    /**
     * Set the destination property: The destination address prefixes. CIDR or destination IP ranges.
     *
     * @param destination the destination value to set.
     * @return the AdminRuleInner object itself.
     */
    public AdminRuleInner withDestination(List<AddressPrefixItem> destination) {
        this.destination = destination;
        return this;
    }

    /**
     * Get the sourcePortRanges property: The source port ranges.
     *
     * @return the sourcePortRanges value.
     */
    public List<String> sourcePortRanges() {
        return this.sourcePortRanges;
    }

    /**
     * Set the sourcePortRanges property: The source port ranges.
     *
     * @param sourcePortRanges the sourcePortRanges value to set.
     * @return the AdminRuleInner object itself.
     */
    public AdminRuleInner withSourcePortRanges(List<String> sourcePortRanges) {
        this.sourcePortRanges = sourcePortRanges;
        return this;
    }

    /**
     * Get the destinationPortRanges property: The destination port ranges.
     *
     * @return the destinationPortRanges value.
     */
    public List<String> destinationPortRanges() {
        return this.destinationPortRanges;
    }

    /**
     * Set the destinationPortRanges property: The destination port ranges.
     *
     * @param destinationPortRanges the destinationPortRanges value to set.
     * @return the AdminRuleInner object itself.
     */
    public AdminRuleInner withDestinationPortRanges(List<String> destinationPortRanges) {
        this.destinationPortRanges = destinationPortRanges;
        return this;
    }

    /**
     * Get the access property: Indicates the access allowed for this particular rule.
     *
     * @return the access value.
     */
    public SecurityConfigurationRuleAccess access() {
        return this.access;
    }

    /**
     * Set the access property: Indicates the access allowed for this particular rule.
     *
     * @param access the access value to set.
     * @return the AdminRuleInner object itself.
     */
    public AdminRuleInner withAccess(SecurityConfigurationRuleAccess access) {
        this.access = access;
        return this;
    }

    /**
     * Get the priority property: The priority of the rule. The value can be between 1 and 4096. The priority number
     * must be unique for each rule in the collection. The lower the priority number, the higher the priority of the
     * rule.
     *
     * @return the priority value.
     */
    public Integer priority() {
        return this.priority;
    }

    /**
     * Set the priority property: The priority of the rule. The value can be between 1 and 4096. The priority number
     * must be unique for each rule in the collection. The lower the priority number, the higher the priority of the
     * rule.
     *
     * @param priority the priority value to set.
     * @return the AdminRuleInner object itself.
     */
    public AdminRuleInner withPriority(Integer priority) {
        this.priority = priority;
        return this;
    }

    /**
     * Get the direction property: Indicates if the traffic matched against the rule in inbound or outbound.
     *
     * @return the direction value.
     */
    public SecurityConfigurationRuleDirection direction() {
        return this.direction;
    }

    /**
     * Set the direction property: Indicates if the traffic matched against the rule in inbound or outbound.
     *
     * @param direction the direction value to set.
     * @return the AdminRuleInner object itself.
     */
    public AdminRuleInner withDirection(SecurityConfigurationRuleDirection direction) {
        this.direction = direction;
        return this;
    }

    /**
     * Get the provisioningState property: The provisioning state of the security Configuration resource.
     *
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the appliesToGroups property: Groups for configuration.
     *
     * @return the appliesToGroups value.
     */
    public List<NetworkManagerSecurityGroupItem> appliesToGroups() {
        return this.appliesToGroups;
    }

    /**
     * Set the appliesToGroups property: Groups for configuration.
     *
     * @param appliesToGroups the appliesToGroups value to set.
     * @return the AdminRuleInner object itself.
     */
    public AdminRuleInner withAppliesToGroups(List<NetworkManagerSecurityGroupItem> appliesToGroups) {
        this.appliesToGroups = appliesToGroups;
        return this;
    }

    /**
     * Get the etag property: A unique read-only string that changes whenever the resource is updated.
     *
     * @return the etag value.
     */
    public String etag() {
        return this.etag;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (systemData() != null) {
            systemData().validate();
        }
        if (source() != null) {
            source().forEach(e -> e.validate());
        }
        if (destination() != null) {
            destination().forEach(e -> e.validate());
        }
        if (appliesToGroups() != null) {
            appliesToGroups().forEach(e -> e.validate());
        }
    }
}
