// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.models;

import com.azure.core.util.Context;
import com.azure.resourcemanager.network.generated.fluent.models.AdminRuleInner;
import java.util.List;

/** An immutable client-side representation of AdminRule. */
public interface AdminRule {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the systemData property: The system metadata related to this resource.
     *
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the displayName property: A friendly name for the rule.
     *
     * @return the displayName value.
     */
    String displayName();

    /**
     * Gets the description property: A description for this rule.
     *
     * @return the description value.
     */
    String description();

    /**
     * Gets the protocol property: Network protocol this rule applies to.
     *
     * @return the protocol value.
     */
    SecurityConfigurationRuleProtocol protocol();

    /**
     * Gets the source property: The CIDR or source IP ranges.
     *
     * @return the source value.
     */
    List<AddressPrefixItem> source();

    /**
     * Gets the destination property: The destination address prefixes. CIDR or destination IP ranges.
     *
     * @return the destination value.
     */
    List<AddressPrefixItem> destination();

    /**
     * Gets the sourcePortRanges property: The source port ranges.
     *
     * @return the sourcePortRanges value.
     */
    List<String> sourcePortRanges();

    /**
     * Gets the destinationPortRanges property: The destination port ranges.
     *
     * @return the destinationPortRanges value.
     */
    List<String> destinationPortRanges();

    /**
     * Gets the access property: Indicates the access allowed for this particular rule.
     *
     * @return the access value.
     */
    SecurityConfigurationRuleAccess access();

    /**
     * Gets the priority property: The priority of the rule. The value can be between 1 and 4096. The priority number
     * must be unique for each rule in the collection. The lower the priority number, the higher the priority of the
     * rule.
     *
     * @return the priority value.
     */
    Integer priority();

    /**
     * Gets the direction property: Indicates if the traffic matched against the rule in inbound or outbound.
     *
     * @return the direction value.
     */
    SecurityConfigurationRuleDirection direction();

    /**
     * Gets the provisioningState property: The provisioning state of the security Configuration resource.
     *
     * @return the provisioningState value.
     */
    ProvisioningState provisioningState();

    /**
     * Gets the appliesToGroups property: Groups for configuration.
     *
     * @return the appliesToGroups value.
     */
    List<NetworkManagerSecurityGroupItem> appliesToGroups();

    /**
     * Gets the etag property: A unique read-only string that changes whenever the resource is updated.
     *
     * @return the etag value.
     */
    String etag();

    /**
     * Gets the inner com.azure.resourcemanager.network.generated.fluent.models.AdminRuleInner object.
     *
     * @return the inner object.
     */
    AdminRuleInner innerModel();

    /** The entirety of the AdminRule definition. */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }
    /** The AdminRule definition stages. */
    interface DefinitionStages {
        /** The first stage of the AdminRule definition. */
        interface Blank extends WithParentResource {
        }
        /** The stage of the AdminRule definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, networkManagerName, configurationName.
             *
             * @param resourceGroupName The name of the resource group.
             * @param networkManagerName The name of the network manager.
             * @param configurationName The name of the network manager security Configuration.
             * @return the next definition stage.
             */
            WithCreate withExistingSecurityConfiguration(
                String resourceGroupName, String networkManagerName, String configurationName);
        }
        /**
         * The stage of the AdminRule definition which contains all the minimum required properties for the resource to
         * be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithDisplayName,
                DefinitionStages.WithDescription,
                DefinitionStages.WithProtocol,
                DefinitionStages.WithSource,
                DefinitionStages.WithDestination,
                DefinitionStages.WithSourcePortRanges,
                DefinitionStages.WithDestinationPortRanges,
                DefinitionStages.WithAccess,
                DefinitionStages.WithPriority,
                DefinitionStages.WithDirection,
                DefinitionStages.WithAppliesToGroups {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            AdminRule create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            AdminRule create(Context context);
        }
        /** The stage of the AdminRule definition allowing to specify displayName. */
        interface WithDisplayName {
            /**
             * Specifies the displayName property: A friendly name for the rule..
             *
             * @param displayName A friendly name for the rule.
             * @return the next definition stage.
             */
            WithCreate withDisplayName(String displayName);
        }
        /** The stage of the AdminRule definition allowing to specify description. */
        interface WithDescription {
            /**
             * Specifies the description property: A description for this rule..
             *
             * @param description A description for this rule.
             * @return the next definition stage.
             */
            WithCreate withDescription(String description);
        }
        /** The stage of the AdminRule definition allowing to specify protocol. */
        interface WithProtocol {
            /**
             * Specifies the protocol property: Network protocol this rule applies to..
             *
             * @param protocol Network protocol this rule applies to.
             * @return the next definition stage.
             */
            WithCreate withProtocol(SecurityConfigurationRuleProtocol protocol);
        }
        /** The stage of the AdminRule definition allowing to specify source. */
        interface WithSource {
            /**
             * Specifies the source property: The CIDR or source IP ranges..
             *
             * @param source The CIDR or source IP ranges.
             * @return the next definition stage.
             */
            WithCreate withSource(List<AddressPrefixItem> source);
        }
        /** The stage of the AdminRule definition allowing to specify destination. */
        interface WithDestination {
            /**
             * Specifies the destination property: The destination address prefixes. CIDR or destination IP ranges..
             *
             * @param destination The destination address prefixes. CIDR or destination IP ranges.
             * @return the next definition stage.
             */
            WithCreate withDestination(List<AddressPrefixItem> destination);
        }
        /** The stage of the AdminRule definition allowing to specify sourcePortRanges. */
        interface WithSourcePortRanges {
            /**
             * Specifies the sourcePortRanges property: The source port ranges..
             *
             * @param sourcePortRanges The source port ranges.
             * @return the next definition stage.
             */
            WithCreate withSourcePortRanges(List<String> sourcePortRanges);
        }
        /** The stage of the AdminRule definition allowing to specify destinationPortRanges. */
        interface WithDestinationPortRanges {
            /**
             * Specifies the destinationPortRanges property: The destination port ranges..
             *
             * @param destinationPortRanges The destination port ranges.
             * @return the next definition stage.
             */
            WithCreate withDestinationPortRanges(List<String> destinationPortRanges);
        }
        /** The stage of the AdminRule definition allowing to specify access. */
        interface WithAccess {
            /**
             * Specifies the access property: Indicates the access allowed for this particular rule.
             *
             * @param access Indicates the access allowed for this particular rule.
             * @return the next definition stage.
             */
            WithCreate withAccess(SecurityConfigurationRuleAccess access);
        }
        /** The stage of the AdminRule definition allowing to specify priority. */
        interface WithPriority {
            /**
             * Specifies the priority property: The priority of the rule. The value can be between 1 and 4096. The
             * priority number must be unique for each rule in the collection. The lower the priority number, the higher
             * the priority of the rule..
             *
             * @param priority The priority of the rule. The value can be between 1 and 4096. The priority number must
             *     be unique for each rule in the collection. The lower the priority number, the higher the priority of
             *     the rule.
             * @return the next definition stage.
             */
            WithCreate withPriority(Integer priority);
        }
        /** The stage of the AdminRule definition allowing to specify direction. */
        interface WithDirection {
            /**
             * Specifies the direction property: Indicates if the traffic matched against the rule in inbound or
             * outbound..
             *
             * @param direction Indicates if the traffic matched against the rule in inbound or outbound.
             * @return the next definition stage.
             */
            WithCreate withDirection(SecurityConfigurationRuleDirection direction);
        }
        /** The stage of the AdminRule definition allowing to specify appliesToGroups. */
        interface WithAppliesToGroups {
            /**
             * Specifies the appliesToGroups property: Groups for configuration.
             *
             * @param appliesToGroups Groups for configuration.
             * @return the next definition stage.
             */
            WithCreate withAppliesToGroups(List<NetworkManagerSecurityGroupItem> appliesToGroups);
        }
    }
    /**
     * Begins update for the AdminRule resource.
     *
     * @return the stage of resource update.
     */
    AdminRule.Update update();

    /** The template for AdminRule update. */
    interface Update
        extends UpdateStages.WithDisplayName,
            UpdateStages.WithDescription,
            UpdateStages.WithProtocol,
            UpdateStages.WithSource,
            UpdateStages.WithDestination,
            UpdateStages.WithSourcePortRanges,
            UpdateStages.WithDestinationPortRanges,
            UpdateStages.WithAccess,
            UpdateStages.WithPriority,
            UpdateStages.WithDirection,
            UpdateStages.WithAppliesToGroups {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        AdminRule apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        AdminRule apply(Context context);
    }
    /** The AdminRule update stages. */
    interface UpdateStages {
        /** The stage of the AdminRule update allowing to specify displayName. */
        interface WithDisplayName {
            /**
             * Specifies the displayName property: A friendly name for the rule..
             *
             * @param displayName A friendly name for the rule.
             * @return the next definition stage.
             */
            Update withDisplayName(String displayName);
        }
        /** The stage of the AdminRule update allowing to specify description. */
        interface WithDescription {
            /**
             * Specifies the description property: A description for this rule..
             *
             * @param description A description for this rule.
             * @return the next definition stage.
             */
            Update withDescription(String description);
        }
        /** The stage of the AdminRule update allowing to specify protocol. */
        interface WithProtocol {
            /**
             * Specifies the protocol property: Network protocol this rule applies to..
             *
             * @param protocol Network protocol this rule applies to.
             * @return the next definition stage.
             */
            Update withProtocol(SecurityConfigurationRuleProtocol protocol);
        }
        /** The stage of the AdminRule update allowing to specify source. */
        interface WithSource {
            /**
             * Specifies the source property: The CIDR or source IP ranges..
             *
             * @param source The CIDR or source IP ranges.
             * @return the next definition stage.
             */
            Update withSource(List<AddressPrefixItem> source);
        }
        /** The stage of the AdminRule update allowing to specify destination. */
        interface WithDestination {
            /**
             * Specifies the destination property: The destination address prefixes. CIDR or destination IP ranges..
             *
             * @param destination The destination address prefixes. CIDR or destination IP ranges.
             * @return the next definition stage.
             */
            Update withDestination(List<AddressPrefixItem> destination);
        }
        /** The stage of the AdminRule update allowing to specify sourcePortRanges. */
        interface WithSourcePortRanges {
            /**
             * Specifies the sourcePortRanges property: The source port ranges..
             *
             * @param sourcePortRanges The source port ranges.
             * @return the next definition stage.
             */
            Update withSourcePortRanges(List<String> sourcePortRanges);
        }
        /** The stage of the AdminRule update allowing to specify destinationPortRanges. */
        interface WithDestinationPortRanges {
            /**
             * Specifies the destinationPortRanges property: The destination port ranges..
             *
             * @param destinationPortRanges The destination port ranges.
             * @return the next definition stage.
             */
            Update withDestinationPortRanges(List<String> destinationPortRanges);
        }
        /** The stage of the AdminRule update allowing to specify access. */
        interface WithAccess {
            /**
             * Specifies the access property: Indicates the access allowed for this particular rule.
             *
             * @param access Indicates the access allowed for this particular rule.
             * @return the next definition stage.
             */
            Update withAccess(SecurityConfigurationRuleAccess access);
        }
        /** The stage of the AdminRule update allowing to specify priority. */
        interface WithPriority {
            /**
             * Specifies the priority property: The priority of the rule. The value can be between 1 and 4096. The
             * priority number must be unique for each rule in the collection. The lower the priority number, the higher
             * the priority of the rule..
             *
             * @param priority The priority of the rule. The value can be between 1 and 4096. The priority number must
             *     be unique for each rule in the collection. The lower the priority number, the higher the priority of
             *     the rule.
             * @return the next definition stage.
             */
            Update withPriority(Integer priority);
        }
        /** The stage of the AdminRule update allowing to specify direction. */
        interface WithDirection {
            /**
             * Specifies the direction property: Indicates if the traffic matched against the rule in inbound or
             * outbound..
             *
             * @param direction Indicates if the traffic matched against the rule in inbound or outbound.
             * @return the next definition stage.
             */
            Update withDirection(SecurityConfigurationRuleDirection direction);
        }
        /** The stage of the AdminRule update allowing to specify appliesToGroups. */
        interface WithAppliesToGroups {
            /**
             * Specifies the appliesToGroups property: Groups for configuration.
             *
             * @param appliesToGroups Groups for configuration.
             * @return the next definition stage.
             */
            Update withAppliesToGroups(List<NetworkManagerSecurityGroupItem> appliesToGroups);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    AdminRule refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    AdminRule refresh(Context context);
}
