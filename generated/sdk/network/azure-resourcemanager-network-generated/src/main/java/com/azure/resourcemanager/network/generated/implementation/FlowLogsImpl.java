// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.resourcemanager.network.generated.NetworkManager;
import com.azure.resourcemanager.network.generated.fluent.FlowLogsClient;
import com.azure.resourcemanager.network.generated.fluent.models.FlowLogInner;
import com.azure.resourcemanager.network.generated.models.FlowLog;
import com.azure.resourcemanager.network.generated.models.FlowLogs;

public final class FlowLogsImpl implements FlowLogs {
    private final FlowLogsClient innerClient;

    private final NetworkManager serviceManager;

    public FlowLogsImpl(FlowLogsClient innerClient, NetworkManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public FlowLog get(String resourceGroupName, String networkWatcherName, String flowLogName) {
        FlowLogInner inner = this.serviceClient().get(resourceGroupName, networkWatcherName, flowLogName);
        if (inner != null) {
            return new FlowLogImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<FlowLog> getWithResponse(
        String resourceGroupName, String networkWatcherName, String flowLogName, Context context) {
        Response<FlowLogInner> inner =
            this.serviceClient().getWithResponse(resourceGroupName, networkWatcherName, flowLogName, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new FlowLogImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public void delete(String resourceGroupName, String networkWatcherName, String flowLogName) {
        this.serviceClient().delete(resourceGroupName, networkWatcherName, flowLogName);
    }

    public void delete(String resourceGroupName, String networkWatcherName, String flowLogName, Context context) {
        this.serviceClient().delete(resourceGroupName, networkWatcherName, flowLogName, context);
    }

    public PagedIterable<FlowLog> list(String resourceGroupName, String networkWatcherName) {
        PagedIterable<FlowLogInner> inner = this.serviceClient().list(resourceGroupName, networkWatcherName);
        return inner.mapPage(inner1 -> new FlowLogImpl(inner1, this.manager()));
    }

    public PagedIterable<FlowLog> list(String resourceGroupName, String networkWatcherName, Context context) {
        PagedIterable<FlowLogInner> inner = this.serviceClient().list(resourceGroupName, networkWatcherName, context);
        return inner.mapPage(inner1 -> new FlowLogImpl(inner1, this.manager()));
    }

    public FlowLog getById(String id) {
        String resourceGroupName = Utils.getValueFromIdByName(id, "resourceGroups");
        String networkWatcherName = Utils.getValueFromIdByName(id, "networkWatchers");
        String flowLogName = Utils.getValueFromIdByName(id, "flowLogs");
        return this.getWithResponse(resourceGroupName, networkWatcherName, flowLogName, Context.NONE).getValue();
    }

    public Response<FlowLog> getByIdWithResponse(String id, Context context) {
        String resourceGroupName = Utils.getValueFromIdByName(id, "resourceGroups");
        String networkWatcherName = Utils.getValueFromIdByName(id, "networkWatchers");
        String flowLogName = Utils.getValueFromIdByName(id, "flowLogs");
        return this.getWithResponse(resourceGroupName, networkWatcherName, flowLogName, context);
    }

    private FlowLogsClient serviceClient() {
        return this.innerClient;
    }

    private NetworkManager manager() {
        return this.serviceManager;
    }

    public FlowLogImpl define(String name) {
        return new FlowLogImpl(name, this.manager());
    }
}
