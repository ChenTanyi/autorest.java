// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.implementation;

import com.azure.core.util.Context;
import com.azure.resourcemanager.network.generated.fluent.models.UserRuleInner;
import com.azure.resourcemanager.network.generated.models.AddressPrefixItem;
import com.azure.resourcemanager.network.generated.models.ProvisioningState;
import com.azure.resourcemanager.network.generated.models.SecurityConfigurationRuleDirection;
import com.azure.resourcemanager.network.generated.models.SecurityConfigurationRuleProtocol;
import com.azure.resourcemanager.network.generated.models.SystemData;
import com.azure.resourcemanager.network.generated.models.UserRule;
import java.util.Collections;
import java.util.List;

public final class UserRuleImpl implements UserRule, UserRule.Definition, UserRule.Update {
    private UserRuleInner innerObject;

    private final com.azure.resourcemanager.network.generated.NetworkManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String displayName() {
        return this.innerModel().displayName();
    }

    public String description() {
        return this.innerModel().description();
    }

    public SecurityConfigurationRuleProtocol protocol() {
        return this.innerModel().protocol();
    }

    public List<AddressPrefixItem> source() {
        List<AddressPrefixItem> inner = this.innerModel().source();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<AddressPrefixItem> destination() {
        List<AddressPrefixItem> inner = this.innerModel().destination();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<String> sourcePortRanges() {
        List<String> inner = this.innerModel().sourcePortRanges();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<String> destinationPortRanges() {
        List<String> inner = this.innerModel().destinationPortRanges();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public SecurityConfigurationRuleDirection direction() {
        return this.innerModel().direction();
    }

    public ProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public String etag() {
        return this.innerModel().etag();
    }

    public UserRuleInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.network.generated.NetworkManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String networkManagerName;

    private String configurationName;

    private String ruleName;

    public UserRuleImpl withExistingSecurityConfiguration(
        String resourceGroupName, String networkManagerName, String configurationName) {
        this.resourceGroupName = resourceGroupName;
        this.networkManagerName = networkManagerName;
        this.configurationName = configurationName;
        return this;
    }

    public UserRule create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getUserRules()
                .createOrUpdateWithResponse(
                    resourceGroupName, networkManagerName, configurationName, ruleName, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public UserRule create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getUserRules()
                .createOrUpdateWithResponse(
                    resourceGroupName, networkManagerName, configurationName, ruleName, this.innerModel(), context)
                .getValue();
        return this;
    }

    UserRuleImpl(String name, com.azure.resourcemanager.network.generated.NetworkManager serviceManager) {
        this.innerObject = new UserRuleInner();
        this.serviceManager = serviceManager;
        this.ruleName = name;
    }

    public UserRuleImpl update() {
        return this;
    }

    public UserRule apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getUserRules()
                .createOrUpdateWithResponse(
                    resourceGroupName, networkManagerName, configurationName, ruleName, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public UserRule apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getUserRules()
                .createOrUpdateWithResponse(
                    resourceGroupName, networkManagerName, configurationName, ruleName, this.innerModel(), context)
                .getValue();
        return this;
    }

    UserRuleImpl(UserRuleInner innerObject, com.azure.resourcemanager.network.generated.NetworkManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.networkManagerName = Utils.getValueFromIdByName(innerObject.id(), "networkManagers");
        this.configurationName = Utils.getValueFromIdByName(innerObject.id(), "securityConfigurations");
        this.ruleName = Utils.getValueFromIdByName(innerObject.id(), "userRules");
    }

    public UserRule refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getUserRules()
                .getWithResponse(resourceGroupName, networkManagerName, configurationName, ruleName, Context.NONE)
                .getValue();
        return this;
    }

    public UserRule refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getUserRules()
                .getWithResponse(resourceGroupName, networkManagerName, configurationName, ruleName, context)
                .getValue();
        return this;
    }

    public UserRuleImpl withDisplayName(String displayName) {
        this.innerModel().withDisplayName(displayName);
        return this;
    }

    public UserRuleImpl withDescription(String description) {
        this.innerModel().withDescription(description);
        return this;
    }

    public UserRuleImpl withProtocol(SecurityConfigurationRuleProtocol protocol) {
        this.innerModel().withProtocol(protocol);
        return this;
    }

    public UserRuleImpl withSource(List<AddressPrefixItem> source) {
        this.innerModel().withSource(source);
        return this;
    }

    public UserRuleImpl withDestination(List<AddressPrefixItem> destination) {
        this.innerModel().withDestination(destination);
        return this;
    }

    public UserRuleImpl withSourcePortRanges(List<String> sourcePortRanges) {
        this.innerModel().withSourcePortRanges(sourcePortRanges);
        return this;
    }

    public UserRuleImpl withDestinationPortRanges(List<String> destinationPortRanges) {
        this.innerModel().withDestinationPortRanges(destinationPortRanges);
        return this;
    }

    public UserRuleImpl withDirection(SecurityConfigurationRuleDirection direction) {
        this.innerModel().withDirection(direction);
        return this;
    }
}
