// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.network.generated.fluent.EffectiveConfigurationsClient;
import com.azure.resourcemanager.network.generated.fluent.models.EffectiveConfigurationInner;
import com.azure.resourcemanager.network.generated.models.EffectiveConfiguration;
import com.azure.resourcemanager.network.generated.models.EffectiveConfigurations;
import com.fasterxml.jackson.annotation.JsonIgnore;

public final class EffectiveConfigurationsImpl implements EffectiveConfigurations {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(EffectiveConfigurationsImpl.class);

    private final EffectiveConfigurationsClient innerClient;

    private final com.azure.resourcemanager.network.generated.NetworkManager serviceManager;

    public EffectiveConfigurationsImpl(
        EffectiveConfigurationsClient innerClient,
        com.azure.resourcemanager.network.generated.NetworkManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<EffectiveConfiguration> list(String resourceGroupName, String virtualNetworkName) {
        PagedIterable<EffectiveConfigurationInner> inner =
            this.serviceClient().list(resourceGroupName, virtualNetworkName);
        return Utils.mapPage(inner, inner1 -> new EffectiveConfigurationImpl(inner1, this.manager()));
    }

    public PagedIterable<EffectiveConfiguration> list(
        String resourceGroupName, String virtualNetworkName, Integer top, String skipToken, Context context) {
        PagedIterable<EffectiveConfigurationInner> inner =
            this.serviceClient().list(resourceGroupName, virtualNetworkName, top, skipToken, context);
        return Utils.mapPage(inner, inner1 -> new EffectiveConfigurationImpl(inner1, this.manager()));
    }

    private EffectiveConfigurationsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.network.generated.NetworkManager manager() {
        return this.serviceManager;
    }
}
