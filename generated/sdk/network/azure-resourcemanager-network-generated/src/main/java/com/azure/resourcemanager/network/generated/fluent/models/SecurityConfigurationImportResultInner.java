// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.network.generated.models.FailedImport;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Security configuration import Result. */
@Fluent
public final class SecurityConfigurationImportResultInner {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(SecurityConfigurationImportResultInner.class);

    /*
     * User security configuration Id.
     */
    @JsonProperty(value = "userSecurityConfiguration")
    private String userSecurityConfiguration;

    /*
     * Admin security configuration Id.
     */
    @JsonProperty(value = "adminSecurityConfiguration")
    private String adminSecurityConfiguration;

    /*
     * failed imports code and reason
     */
    @JsonProperty(value = "failedImport")
    private FailedImport failedImport;

    /**
     * Get the userSecurityConfiguration property: User security configuration Id.
     *
     * @return the userSecurityConfiguration value.
     */
    public String userSecurityConfiguration() {
        return this.userSecurityConfiguration;
    }

    /**
     * Set the userSecurityConfiguration property: User security configuration Id.
     *
     * @param userSecurityConfiguration the userSecurityConfiguration value to set.
     * @return the SecurityConfigurationImportResultInner object itself.
     */
    public SecurityConfigurationImportResultInner withUserSecurityConfiguration(String userSecurityConfiguration) {
        this.userSecurityConfiguration = userSecurityConfiguration;
        return this;
    }

    /**
     * Get the adminSecurityConfiguration property: Admin security configuration Id.
     *
     * @return the adminSecurityConfiguration value.
     */
    public String adminSecurityConfiguration() {
        return this.adminSecurityConfiguration;
    }

    /**
     * Set the adminSecurityConfiguration property: Admin security configuration Id.
     *
     * @param adminSecurityConfiguration the adminSecurityConfiguration value to set.
     * @return the SecurityConfigurationImportResultInner object itself.
     */
    public SecurityConfigurationImportResultInner withAdminSecurityConfiguration(String adminSecurityConfiguration) {
        this.adminSecurityConfiguration = adminSecurityConfiguration;
        return this;
    }

    /**
     * Get the failedImport property: failed imports code and reason.
     *
     * @return the failedImport value.
     */
    public FailedImport failedImport() {
        return this.failedImport;
    }

    /**
     * Set the failedImport property: failed imports code and reason.
     *
     * @param failedImport the failedImport value to set.
     * @return the SecurityConfigurationImportResultInner object itself.
     */
    public SecurityConfigurationImportResultInner withFailedImport(FailedImport failedImport) {
        this.failedImport = failedImport;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (failedImport() != null) {
            failedImport().validate();
        }
    }
}
