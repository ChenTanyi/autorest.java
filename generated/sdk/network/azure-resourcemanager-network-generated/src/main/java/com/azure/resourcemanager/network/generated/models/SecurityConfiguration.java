// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.models;

import com.azure.core.util.Context;
import com.azure.resourcemanager.network.generated.fluent.models.SecurityConfigurationInner;
import java.util.List;

/** An immutable client-side representation of SecurityConfiguration. */
public interface SecurityConfiguration {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the systemData property: The system metadata related to this resource.
     *
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the displayName property: A display name of the security Configuration.
     *
     * @return the displayName value.
     */
    String displayName();

    /**
     * Gets the description property: A description of the security Configuration.
     *
     * @return the description value.
     */
    String description();

    /**
     * Gets the securityType property: Security Type.
     *
     * @return the securityType value.
     */
    SecurityType securityType();

    /**
     * Gets the deleteExistingNSGs property: Flag if need to delete existing network security groups.
     *
     * @return the deleteExistingNSGs value.
     */
    Boolean deleteExistingNSGs();

    /**
     * Gets the appliesToGroups property: Groups for configuration.
     *
     * @return the appliesToGroups value.
     */
    List<NetworkManagerSecurityGroupItem> appliesToGroups();

    /**
     * Gets the provisioningState property: The provisioning state of the scope assignment resource.
     *
     * @return the provisioningState value.
     */
    ProvisioningState provisioningState();

    /**
     * Gets the etag property: A unique read-only string that changes whenever the resource is updated.
     *
     * @return the etag value.
     */
    String etag();

    /**
     * Gets the inner com.azure.resourcemanager.network.generated.fluent.models.SecurityConfigurationInner object.
     *
     * @return the inner object.
     */
    SecurityConfigurationInner innerModel();

    /** The entirety of the SecurityConfiguration definition. */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }
    /** The SecurityConfiguration definition stages. */
    interface DefinitionStages {
        /** The first stage of the SecurityConfiguration definition. */
        interface Blank extends WithParentResource {
        }
        /** The stage of the SecurityConfiguration definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, networkManagerName.
             *
             * @param resourceGroupName The name of the resource group.
             * @param networkManagerName The name of the network manager.
             * @return the next definition stage.
             */
            WithCreate withExistingNetworkManager(String resourceGroupName, String networkManagerName);
        }
        /**
         * The stage of the SecurityConfiguration definition which contains all the minimum required properties for the
         * resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithDisplayName,
                DefinitionStages.WithDescription,
                DefinitionStages.WithSecurityType,
                DefinitionStages.WithDeleteExistingNSGs,
                DefinitionStages.WithAppliesToGroups {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            SecurityConfiguration create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            SecurityConfiguration create(Context context);
        }
        /** The stage of the SecurityConfiguration definition allowing to specify displayName. */
        interface WithDisplayName {
            /**
             * Specifies the displayName property: A display name of the security Configuration..
             *
             * @param displayName A display name of the security Configuration.
             * @return the next definition stage.
             */
            WithCreate withDisplayName(String displayName);
        }
        /** The stage of the SecurityConfiguration definition allowing to specify description. */
        interface WithDescription {
            /**
             * Specifies the description property: A description of the security Configuration..
             *
             * @param description A description of the security Configuration.
             * @return the next definition stage.
             */
            WithCreate withDescription(String description);
        }
        /** The stage of the SecurityConfiguration definition allowing to specify securityType. */
        interface WithSecurityType {
            /**
             * Specifies the securityType property: Security Type..
             *
             * @param securityType Security Type.
             * @return the next definition stage.
             */
            WithCreate withSecurityType(SecurityType securityType);
        }
        /** The stage of the SecurityConfiguration definition allowing to specify deleteExistingNSGs. */
        interface WithDeleteExistingNSGs {
            /**
             * Specifies the deleteExistingNSGs property: Flag if need to delete existing network security groups..
             *
             * @param deleteExistingNSGs Flag if need to delete existing network security groups.
             * @return the next definition stage.
             */
            WithCreate withDeleteExistingNSGs(Boolean deleteExistingNSGs);
        }
        /** The stage of the SecurityConfiguration definition allowing to specify appliesToGroups. */
        interface WithAppliesToGroups {
            /**
             * Specifies the appliesToGroups property: Groups for configuration.
             *
             * @param appliesToGroups Groups for configuration.
             * @return the next definition stage.
             */
            WithCreate withAppliesToGroups(List<NetworkManagerSecurityGroupItem> appliesToGroups);
        }
    }
    /**
     * Begins update for the SecurityConfiguration resource.
     *
     * @return the stage of resource update.
     */
    SecurityConfiguration.Update update();

    /** The template for SecurityConfiguration update. */
    interface Update
        extends UpdateStages.WithDisplayName,
            UpdateStages.WithDescription,
            UpdateStages.WithSecurityType,
            UpdateStages.WithDeleteExistingNSGs,
            UpdateStages.WithAppliesToGroups {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        SecurityConfiguration apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        SecurityConfiguration apply(Context context);
    }
    /** The SecurityConfiguration update stages. */
    interface UpdateStages {
        /** The stage of the SecurityConfiguration update allowing to specify displayName. */
        interface WithDisplayName {
            /**
             * Specifies the displayName property: A display name of the security Configuration..
             *
             * @param displayName A display name of the security Configuration.
             * @return the next definition stage.
             */
            Update withDisplayName(String displayName);
        }
        /** The stage of the SecurityConfiguration update allowing to specify description. */
        interface WithDescription {
            /**
             * Specifies the description property: A description of the security Configuration..
             *
             * @param description A description of the security Configuration.
             * @return the next definition stage.
             */
            Update withDescription(String description);
        }
        /** The stage of the SecurityConfiguration update allowing to specify securityType. */
        interface WithSecurityType {
            /**
             * Specifies the securityType property: Security Type..
             *
             * @param securityType Security Type.
             * @return the next definition stage.
             */
            Update withSecurityType(SecurityType securityType);
        }
        /** The stage of the SecurityConfiguration update allowing to specify deleteExistingNSGs. */
        interface WithDeleteExistingNSGs {
            /**
             * Specifies the deleteExistingNSGs property: Flag if need to delete existing network security groups..
             *
             * @param deleteExistingNSGs Flag if need to delete existing network security groups.
             * @return the next definition stage.
             */
            Update withDeleteExistingNSGs(Boolean deleteExistingNSGs);
        }
        /** The stage of the SecurityConfiguration update allowing to specify appliesToGroups. */
        interface WithAppliesToGroups {
            /**
             * Specifies the appliesToGroups property: Groups for configuration.
             *
             * @param appliesToGroups Groups for configuration.
             * @return the next definition stage.
             */
            Update withAppliesToGroups(List<NetworkManagerSecurityGroupItem> appliesToGroups);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    SecurityConfiguration refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    SecurityConfiguration refresh(Context context);
}
