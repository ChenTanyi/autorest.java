// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.network.generated.models.SecurityType;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** General security configuration Rule. */
@Fluent
public final class SecurityConfigurationRuleInner {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(SecurityConfigurationRuleInner.class);

    /*
     * Commit Type.
     */
    @JsonProperty(value = "securityType")
    private SecurityType securityType;

    /*
     * Security admin rule.
     */
    @JsonProperty(value = "securityAdminRule")
    private AdminRuleInner securityAdminRule;

    /*
     * Security user rule.
     */
    @JsonProperty(value = "securityUserRule")
    private UserRuleInner securityUserRule;

    /**
     * Get the securityType property: Commit Type.
     *
     * @return the securityType value.
     */
    public SecurityType securityType() {
        return this.securityType;
    }

    /**
     * Set the securityType property: Commit Type.
     *
     * @param securityType the securityType value to set.
     * @return the SecurityConfigurationRuleInner object itself.
     */
    public SecurityConfigurationRuleInner withSecurityType(SecurityType securityType) {
        this.securityType = securityType;
        return this;
    }

    /**
     * Get the securityAdminRule property: Security admin rule.
     *
     * @return the securityAdminRule value.
     */
    public AdminRuleInner securityAdminRule() {
        return this.securityAdminRule;
    }

    /**
     * Set the securityAdminRule property: Security admin rule.
     *
     * @param securityAdminRule the securityAdminRule value to set.
     * @return the SecurityConfigurationRuleInner object itself.
     */
    public SecurityConfigurationRuleInner withSecurityAdminRule(AdminRuleInner securityAdminRule) {
        this.securityAdminRule = securityAdminRule;
        return this;
    }

    /**
     * Get the securityUserRule property: Security user rule.
     *
     * @return the securityUserRule value.
     */
    public UserRuleInner securityUserRule() {
        return this.securityUserRule;
    }

    /**
     * Set the securityUserRule property: Security user rule.
     *
     * @param securityUserRule the securityUserRule value to set.
     * @return the SecurityConfigurationRuleInner object itself.
     */
    public SecurityConfigurationRuleInner withSecurityUserRule(UserRuleInner securityUserRule) {
        this.securityUserRule = securityUserRule;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (securityAdminRule() != null) {
            securityAdminRule().validate();
        }
        if (securityUserRule() != null) {
            securityUserRule().validate();
        }
    }
}
