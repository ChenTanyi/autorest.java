// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.implementation;

import com.azure.resourcemanager.network.generated.fluent.models.AdminRuleInner;
import com.azure.resourcemanager.network.generated.fluent.models.SecurityConfigurationRuleInner;
import com.azure.resourcemanager.network.generated.fluent.models.UserRuleInner;
import com.azure.resourcemanager.network.generated.models.AdminRule;
import com.azure.resourcemanager.network.generated.models.SecurityConfigurationRule;
import com.azure.resourcemanager.network.generated.models.SecurityType;
import com.azure.resourcemanager.network.generated.models.UserRule;

public final class SecurityConfigurationRuleImpl implements SecurityConfigurationRule {
    private SecurityConfigurationRuleInner innerObject;

    private final com.azure.resourcemanager.network.generated.NetworkManager serviceManager;

    SecurityConfigurationRuleImpl(
        SecurityConfigurationRuleInner innerObject,
        com.azure.resourcemanager.network.generated.NetworkManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public SecurityType securityType() {
        return this.innerModel().securityType();
    }

    public AdminRule securityAdminRule() {
        AdminRuleInner inner = this.innerModel().securityAdminRule();
        if (inner != null) {
            return new AdminRuleImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public UserRule securityUserRule() {
        UserRuleInner inner = this.innerModel().securityUserRule();
        if (inner != null) {
            return new UserRuleImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public SecurityConfigurationRuleInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.network.generated.NetworkManager manager() {
        return this.serviceManager;
    }
}
