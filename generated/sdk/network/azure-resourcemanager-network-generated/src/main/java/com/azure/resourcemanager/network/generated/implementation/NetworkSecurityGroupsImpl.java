// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.generated.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.resourcemanager.network.generated.NetworkManager;
import com.azure.resourcemanager.network.generated.fluent.NetworkSecurityGroupsClient;
import com.azure.resourcemanager.network.generated.fluent.models.NetworkSecurityGroupInner;
import com.azure.resourcemanager.network.generated.models.NetworkSecurityGroup;
import com.azure.resourcemanager.network.generated.models.NetworkSecurityGroups;

public final class NetworkSecurityGroupsImpl implements NetworkSecurityGroups {
    private final NetworkSecurityGroupsClient innerClient;

    private final NetworkManager serviceManager;

    public NetworkSecurityGroupsImpl(NetworkSecurityGroupsClient innerClient, NetworkManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public void delete(String resourceGroupName, String networkSecurityGroupName) {
        this.serviceClient().delete(resourceGroupName, networkSecurityGroupName);
    }

    public void delete(String resourceGroupName, String networkSecurityGroupName, Context context) {
        this.serviceClient().delete(resourceGroupName, networkSecurityGroupName, context);
    }

    public NetworkSecurityGroup getByResourceGroup(String resourceGroupName, String networkSecurityGroupName) {
        NetworkSecurityGroupInner inner =
            this.serviceClient().getByResourceGroup(resourceGroupName, networkSecurityGroupName);
        if (inner != null) {
            return new NetworkSecurityGroupImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<NetworkSecurityGroup> getByResourceGroupWithResponse(
        String resourceGroupName, String networkSecurityGroupName, String expand, Context context) {
        Response<NetworkSecurityGroupInner> inner =
            this
                .serviceClient()
                .getByResourceGroupWithResponse(resourceGroupName, networkSecurityGroupName, expand, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new NetworkSecurityGroupImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public PagedIterable<NetworkSecurityGroup> list() {
        PagedIterable<NetworkSecurityGroupInner> inner = this.serviceClient().list();
        return inner.mapPage(inner1 -> new NetworkSecurityGroupImpl(inner1, this.manager()));
    }

    public PagedIterable<NetworkSecurityGroup> list(Context context) {
        PagedIterable<NetworkSecurityGroupInner> inner = this.serviceClient().list(context);
        return inner.mapPage(inner1 -> new NetworkSecurityGroupImpl(inner1, this.manager()));
    }

    public PagedIterable<NetworkSecurityGroup> listByResourceGroup(String resourceGroupName) {
        PagedIterable<NetworkSecurityGroupInner> inner = this.serviceClient().listByResourceGroup(resourceGroupName);
        return inner.mapPage(inner1 -> new NetworkSecurityGroupImpl(inner1, this.manager()));
    }

    public PagedIterable<NetworkSecurityGroup> listByResourceGroup(String resourceGroupName, Context context) {
        PagedIterable<NetworkSecurityGroupInner> inner =
            this.serviceClient().listByResourceGroup(resourceGroupName, context);
        return inner.mapPage(inner1 -> new NetworkSecurityGroupImpl(inner1, this.manager()));
    }

    public NetworkSecurityGroup getById(String id) {
        String resourceGroupName = Utils.getValueFromIdByName(id, "resourceGroups");
        String networkSecurityGroupName = Utils.getValueFromIdByName(id, "networkSecurityGroups");
        String localExpand = null;
        return this
            .getByResourceGroupWithResponse(resourceGroupName, networkSecurityGroupName, localExpand, Context.NONE)
            .getValue();
    }

    public Response<NetworkSecurityGroup> getByIdWithResponse(String id, String expand, Context context) {
        String resourceGroupName = Utils.getValueFromIdByName(id, "resourceGroups");
        String networkSecurityGroupName = Utils.getValueFromIdByName(id, "networkSecurityGroups");
        return this.getByResourceGroupWithResponse(resourceGroupName, networkSecurityGroupName, expand, context);
    }

    private NetworkSecurityGroupsClient serviceClient() {
        return this.innerClient;
    }

    private NetworkManager manager() {
        return this.serviceManager;
    }

    public NetworkSecurityGroupImpl define(String name) {
        return new NetworkSecurityGroupImpl(name, this.manager());
    }
}
