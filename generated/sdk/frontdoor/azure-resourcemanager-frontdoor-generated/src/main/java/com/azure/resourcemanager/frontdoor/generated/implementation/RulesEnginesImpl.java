// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.frontdoor.generated.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.resourcemanager.frontdoor.generated.FrontDoorManager;
import com.azure.resourcemanager.frontdoor.generated.fluent.RulesEnginesClient;
import com.azure.resourcemanager.frontdoor.generated.fluent.models.RulesEngineInner;
import com.azure.resourcemanager.frontdoor.generated.models.RulesEngine;
import com.azure.resourcemanager.frontdoor.generated.models.RulesEngines;

public final class RulesEnginesImpl implements RulesEngines {
    private final RulesEnginesClient innerClient;

    private final FrontDoorManager serviceManager;

    public RulesEnginesImpl(RulesEnginesClient innerClient, FrontDoorManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<RulesEngine> listByFrontDoor(String resourceGroupName, String frontDoorName) {
        PagedIterable<RulesEngineInner> inner = this.serviceClient().listByFrontDoor(resourceGroupName, frontDoorName);
        return inner.mapPage(inner1 -> new RulesEngineImpl(inner1, this.manager()));
    }

    public PagedIterable<RulesEngine> listByFrontDoor(String resourceGroupName, String frontDoorName, Context context) {
        PagedIterable<RulesEngineInner> inner =
            this.serviceClient().listByFrontDoor(resourceGroupName, frontDoorName, context);
        return inner.mapPage(inner1 -> new RulesEngineImpl(inner1, this.manager()));
    }

    public RulesEngine get(String resourceGroupName, String frontDoorName, String rulesEngineName) {
        RulesEngineInner inner = this.serviceClient().get(resourceGroupName, frontDoorName, rulesEngineName);
        if (inner != null) {
            return new RulesEngineImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<RulesEngine> getWithResponse(
        String resourceGroupName, String frontDoorName, String rulesEngineName, Context context) {
        Response<RulesEngineInner> inner =
            this.serviceClient().getWithResponse(resourceGroupName, frontDoorName, rulesEngineName, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new RulesEngineImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public void delete(String resourceGroupName, String frontDoorName, String rulesEngineName) {
        this.serviceClient().delete(resourceGroupName, frontDoorName, rulesEngineName);
    }

    public void delete(String resourceGroupName, String frontDoorName, String rulesEngineName, Context context) {
        this.serviceClient().delete(resourceGroupName, frontDoorName, rulesEngineName, context);
    }

    private RulesEnginesClient serviceClient() {
        return this.innerClient;
    }

    private FrontDoorManager manager() {
        return this.serviceManager;
    }

    public RulesEngineImpl define(String name) {
        return new RulesEngineImpl(name, this.manager());
    }
}
