// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.iothub.generated.implementation;

import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.iothub.generated.IotHubManager;
import com.azure.resourcemanager.iothub.generated.fluent.models.IotHubDescriptionInner;
import com.azure.resourcemanager.iothub.generated.models.IotHubDescription;
import com.azure.resourcemanager.iothub.generated.models.IotHubProperties;
import com.azure.resourcemanager.iothub.generated.models.IotHubSkuInfo;
import com.azure.resourcemanager.iothub.generated.models.TagsResource;
import java.util.Collections;
import java.util.Map;

public final class IotHubDescriptionImpl
    implements IotHubDescription, IotHubDescription.Definition, IotHubDescription.Update {
    private IotHubDescriptionInner innerObject;

    private final IotHubManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return null;
        }
    }

    public String etag() {
        return this.innerModel().etag();
    }

    public IotHubProperties properties() {
        return this.innerModel().properties();
    }

    public IotHubSkuInfo sku() {
        return this.innerModel().sku();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public IotHubDescriptionInner innerModel() {
        return this.innerObject;
    }

    private IotHubManager manager() {
        return this.serviceManager;
    }

    private String createIfMatch;

    private String resourceGroupName;

    private String resourceName;

    private TagsResource updateIotHubTags;

    public IotHubDescriptionImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public IotHubDescription create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getIotHubResources()
                .createOrUpdate(resourceGroupName, resourceName, innerObject, createIfMatch, Context.NONE);
        return this;
    }

    public IotHubDescription create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getIotHubResources()
                .createOrUpdate(resourceGroupName, resourceName, innerObject, createIfMatch, context);
        return this;
    }

    public IotHubDescriptionImpl(String name, IotHubManager serviceManager) {
        this.innerObject = new IotHubDescriptionInner();
        this.serviceManager = serviceManager;
        this.resourceName = name;
        this.createIfMatch = null;
    }

    public IotHubDescriptionImpl update() {
        this.updateIotHubTags = new TagsResource();
        return this;
    }

    public IotHubDescription apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getIotHubResources()
                .update(resourceGroupName, resourceName, updateIotHubTags, Context.NONE);
        return this;
    }

    public IotHubDescription apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getIotHubResources()
                .update(resourceGroupName, resourceName, updateIotHubTags, context);
        return this;
    }

    public IotHubDescriptionImpl(IotHubDescriptionInner innerObject, IotHubManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.resourceName = Utils.getValueFromIdByName(innerObject.id(), "IotHubs");
    }

    public IotHubDescription refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getIotHubResources()
                .getByResourceGroupWithResponse(resourceGroupName, resourceName, Context.NONE)
                .getValue();
        return this;
    }

    public IotHubDescription refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getIotHubResources()
                .getByResourceGroupWithResponse(resourceGroupName, resourceName, context)
                .getValue();
        return this;
    }

    public IotHubDescriptionImpl withProperties(IotHubProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }

    public IotHubDescriptionImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateIotHubTags.withTags(tags);
            return this;
        }
    }

    public IotHubDescriptionImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public IotHubDescriptionImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public IotHubDescriptionImpl withSku(IotHubSkuInfo sku) {
        this.innerModel().withSku(sku);
        return this;
    }

    public IotHubDescriptionImpl withIfMatch(String ifMatch) {
        this.createIfMatch = ifMatch;
        return this;
    }

    public IotHubDescriptionImpl withEtag(String etag) {
        this.innerModel().withEtag(etag);
        return this;
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}
